秒杀商品实体对象
商品信息、订单信息、用户信息
秒杀注意事项
商品秒杀在指定时间内以超低价销售某种商品，那么在
秒杀阶段就会产生大量用户的并发请求，系统如何抗住
如此并发量是保证系统稳定的基石。而且应该注意并发点
是在商品秒杀的前期，即商品下单的过程中。具体为：
1）请求商品库存信息（读请求）
2）创建秒杀订单（写请求）
3）订单成功创建通知
4）订单支付通知
系统稳定的关键在于在请求商品的库存信息时候，如何保证系统不宕机
1）假设系统请求的并发量为10000000qps
2）对于redis的qps为100000，那么就需要10个redis系统
3）一旦存在库存，就可以下订单，这个过程实际并发量不高
4）如果1000000qps直接打到mysqlDb的话，db会崩溃，因为我们知道
mysql的qps仅为1万+。所以请求不能达到db上。因此我们会将库存信息同步到
redis缓存中。
5）虽然redis的qps大于db的qps一个量级，但是对于千万级的qps也是显得新犹如而力不足。
6）如何让redis能够抗住千万计的qps就成为了我们设计的难点。
7）在并发情况下如何防止超卖也是系统设计需要考虑的问题。
对于第6点的解决方案有：
1）使用redis限流，比如限制qps为1万
2）使用redis集群，
3）将请求放入到消息队列中

对于第7点的解决方案：
1）商品超卖主要是高并发引起的，因此可以将扣减库存信息使用锁机制解决
2）可以将库存信息保存在redis中，由于redis是单进程的，所有的请求都会排队
放入队列中，因此不会出现并发操作。
3）使用罅隙队列解决。